{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["QueryBox","props","state","data","baseUrl","endPoint","sqlQuery","document","getElementById","value","queryType","trim","split","toLowerCase","database","getElementsByName","checked","URL","searchParams","append","console","log","url","axios","defaults","headers","post","get","then","res","request","status","setState","error","object","alert","message","event","Headers","this","requestType","submitGetRequest","createUrl","toString","submitPostRequest","tableData","responseObject","columnNames","className","name","type","id","htmlFor","colSpan","onClick","handleSubmit","handleReset","renderDataPaneContent","React","Component","Table","getHeader","map","column","toUpperCase","getRows","rows","rsObjList","row","index","getRow","cell","bind","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d941dd2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\n//import QueryBox from './QueryBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <QueryBox />\n      </header>\n    </div>\n  );\n}\n\nclass QueryBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  createUrl() {\n    var baseUrl = \"http://localhost:8090/instacart\";\n\n    var endPoint = \"/exec\";\n\n    var sqlQuery = document.getElementById(\"query-box\").value;\n    sqlQuery = sqlQuery.trim();\n\n    var queryType = sqlQuery === null || sqlQuery === \"\" ? \"select\" : sqlQuery.split(\" \")[0].toLowerCase();\n\n    if(queryType === \"select\")\n      endPoint += \"Select\";\n    else if(queryType === \"update\")\n      endPoint += \"Update\";\n\n    var databaseChoices = document.getElementsByName(\"database\");\n    var database = \"MySql\";\n    if(databaseChoices[1].checked)\n      database = \"Redshift\";\n\n    endPoint += database;\n    endPoint += \"Query\";\n\n    baseUrl +=endPoint;\n\n    baseUrl = new URL(baseUrl);\n    baseUrl.searchParams.append(\"strSql\",sqlQuery);\n\n    console.log(\"endpoint is \" + baseUrl);\n    return baseUrl;\n  }\n\n  requestType() {\n    var sqlQuery = document.getElementById(\"query-box\").value;\n    sqlQuery = sqlQuery.trim();\n    var queryType = sqlQuery === null || sqlQuery === \"\" ? \"select\" : sqlQuery.split(\" \")[0].toLowerCase();\n\n    if(queryType === \"update\" || queryType === \"delete\" || queryType === \"insert\" )\n      return \"post\";\n    return \"get\";\n  }\n\n  submitGetRequest(url) {\n    axios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    axios.get(url)\n        .then(res => {\n          console.log(res);\n          if(res.request.status < 300) {\n            console.log(\"Success\");\n            this.setState({data: true, error: false, object: res.data});\n          }\n          else {\n            console.log(\"Failed\");\n            this.setState({data: false, error: true, object: null});\n            alert(res.data);\n          }\n        },(error) => {\n          alert(error.message);\n        });\n  }\n\n  submitPostRequest(url) {\n    axios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\n    axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n    axios.post(url)\n        .then(res => {\n          console.log(res);\n          if(res.request.status < 300) {\n            console.log(\"Success\");\n            this.setState({data: \"Success\", error: false, object: null});\n          }\n          else {\n            console.log(\"Failed\");\n            this.setState({data: false, error: true, object: null});\n            alert(res.data);\n          }\n        },(error) => {\n          alert(error.message);\n        });\n  }\n\n  handleSubmit(event) {\n    let headers = new Headers();\n    headers.append('Access-Control-Allow-Origin', '*');\n\n    if(this.requestType() === \"get\")\n      this.submitGetRequest(this.createUrl().toString());\n    else\n      this.submitPostRequest(this.createUrl().toString());\n\n  }\n\n  handleReset(event) {\n    console.log(\"Reset\");\n    this.setState({data: null})\n  }\n\n  renderDataPaneContent() {\n    if(this.state.data === null)\n      return (<p>Nothing to display</p>)\n    else {\n      if(this.state.error === true)\n        return (<p>{this.state.data}</p>)\n      else\n        return (<div>{this.tableData()}</div>)\n    }\n  }\n\n  tableData() {\n    var responseObject = this.state.object;\n    console.log(responseObject);\n    if(responseObject === null)\n      return (<p>Done</p>);\n    var columnNames = responseObject.columnNames;\n    console.log(columnNames[0]);\n    return (<Table data={responseObject}/>)\n  }\n\n\n  render() {\n    return (\n        <div>\n          <div className=\"query-div\">\n            <h2>Data Dispenser</h2>\n            <form name=\"Query Form\" >\n              <table>\n                <tbody>\n                  <tr>\n                    <td><input type=\"radio\" id=\"mysql\" name=\"database\" value=\"MySQL\"/><label htmlFor=\"mysql\">MySQL</label></td>\n                    <td><input type=\"radio\" id=\"redshift\" name=\"database\" value=\"RedShift\"/><label htmlFor=\"redshift\">RedShift</label></td>\n                  </tr>\n                  <tr>\n                    <td colSpan={2}><textarea id=\"query-box\" className=\"query-box\"/></td>\n                  </tr>\n                  <tr>\n                    <td><input className=\"submit\" type=\"button\" value=\"Fire\" onClick={() => {this.handleSubmit();}}></input></td>\n                    <td><input className=\"reset\" type=\"reset\" value=\"Clear\" onClick={() => {this.handleReset();}}></input></td>\n                  </tr>\n                </tbody>\n              </table>\n            </form>\n        </div>\n          <div className=\"table-div\">\n            {this.renderDataPaneContent()}\n          </div>\n        </div>\n    );\n  }\n}\n\nclass Table extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.getHeader = this.getHeader.bind(this);\n    this.getRows = this.getRows.bind(this);\n    this.getRow = this.getRow.bind(this);\n  }\n\n  getHeader = function(){\n    var columns = this.props.data.columnNames;\n    return columns.map((column) =>  {\n      return (<th key={column}>{column.toUpperCase()}</th>);\n    });\n  }\n\n  getRows = function(){\n    var rows = this.props.data;\n    rows = rows.rsObjList;\n    return rows.map( (row, index) => {\n          return (<tr>{this.getRow(row,index)}</tr>);\n        }\n    )\n  }\n\n  getRow = function(row, index) {\n    return row.map( (cell) => {\n      return (<td>{cell}</td>);\n        }\n    )\n  }\n\n  render() {\n    return (\n        <div>\n          <table>\n            <thead>\n            <tr>{this.getHeader()}</tr>\n            </thead>\n            <tbody>\n            {this.getRows()}\n            </tbody>\n          </table>\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}